# default menu overrides

[menu __main __octoprint]
type: disabled
enable: False

[menu __main __sdcard __start]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Start printing
gcode: M24

[menu __main __control __homez]
type: disabled
enable: False

[menu __main __control __homexy]
type: disabled
enable: False

[menu __main __temp __preheat_pla]
type: disabled
enable: False

[menu __main __temp __preheat_abs]
type: disabled
enable: False

[menu __main __temp __cooldown]
type: disabled
enable: False

# Only Cool down All, without nested submenu
[menu __main __temp __cooldown_all]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Cooldown all
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
      M104 S0
      M140 S0
    {% endif %}

[menu __main __setup __save_config]
type: disabled
enable: False

[menu __main __control __park]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park toolhead
gcode: PARK

[menu __main __control __calibrate_z]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Calibrate Z
gcode: CALIBRATE__Z

# Override max temperatures
[menu __main __temp __hotend0_target]
type: input
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: 285
input_step: 5
gcode: M104 S{'%.0f' % menu.input}


[menu __main __temp __hotbed_target]
type: input
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: 110
input_step: 5
gcode: M140 S{'%.0f' % menu.input}

[menu __main __filament __hotend0_target]
type: input
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: 285
input_step: 1
gcode: M104 S{'%.0f' % menu.input}

[menu __main __control __fanonoff]
type: disabled
enable: False

[menu __main __control __exhaustfan]
type: input
enable: True
name: Exhaust: {'%3d' % (menu.input*100)}%
input: {printer["fan_generic exhaust_fan"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED={menu.input}

[menu __main __temp __preheat_chamber]
type: command
enable: {printer.idle_timeout.state == "Idle"}
name: Preheat chamber
gcode:
    {% if printer.idle_timeout.state == "Idle" %}
      PREHEAT_CHAMBER WAIT=0
    {% endif %}

[menu __main __filament __purge]
type: command
name: Purge
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    PURGE
  {% endif %}

[menu __main __filament _form_tip]
type: command
name: Form Tip
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    FORM_TIP
    _WIPE_IF_IN_POSITION
  {% endif %}

[menu __main __filament _wipe]
type: command
name: Wipe
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    WIPE
  {% endif %}
